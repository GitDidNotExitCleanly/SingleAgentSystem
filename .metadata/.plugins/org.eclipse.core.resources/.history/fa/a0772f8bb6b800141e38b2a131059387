package uk.ac.nott.cs.g54dia.library;

import java.util.ArrayList;

public class Plans {
	
	private ArrayList<Point> optimalExploringPoints;
	
	public Plans() {
		this.optimalExploringPoints = new ArrayList<Point>();
	}
	
	// functions
	public Action execute(Desires desires,Beliefs beliefs) {
		
		Action result = null;
		switch (desires.getCurrentDesire()) {
		case FINSH_TASK:
			
			
			
			
			break;
		case TRAVERSE_MAP:
			if (beliefs.getCurrentCell() instanceof FuelPump && beliefs.getFuel() < Tanker.MAX_FUEL) {
				result = new RefuelAction();
			}
			else {
				if (!beliefs.isExplorationFinished()) {
					if (beliefs.isFuelEnoughForReturn()) {
						result = new MoveTowardsAction(beliefs.getExploringPoints().get(0));
					}
					else {
						result = new MoveTowardsAction(Tanker.FUEL_PUMP_LOCATION);
					}
				}
				else {
					if (this.optimalExploringPoints.size() == 0) {
						this.optimalExploringPoints = beliefs.getOptimalExploringPoints();
					}
					result = new MoveTowardsAction(this.optimalExploringPoints.get(0));
				}
			}
			
			
			
			
			break;
		default:
			break;
		}
		
		return result;
	}
}
